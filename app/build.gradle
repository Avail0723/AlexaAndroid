apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

buildscript {
    ext {
        artifactory_app_username = "MimoSaha"
        artifactory_app_password = "042eda63694c7dd87096e23fd7b72856"
        artifactory_app_key = "0x88668a8869a818a929d727630afdbd623b943887"
    }
    repositories {
        maven {
            url "http://research.rightmesh.io/artifactory/libs-local"
            credentials {
                username artifactory_app_username
                password artifactory_app_password
            }
        }
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'io.left.rightmesh:rightmesh-plugin:1.3'
    }

}
apply plugin: 'io.left.rightmesh.rightmesh-plugin'
preBuild.dependsOn("rightmesh")

repositories {
    mavenCentral()
    jcenter()
    google()
    maven {
        url "http://research.rightmesh.io/artifactory/libs-local"
        credentials {
            username artifactory_app_username
            password artifactory_app_password
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite {}
            }
        }
    }
}

if (file('signing.gradle').exists()) {
    apply from: 'signing.gradle'
}else{
    //throw new TaskExecutionException(null, new Exception("Unable to find signing.gradle, please replace Android buildTypes > signing configs with your own configuration."));
}

android {
    compileSdkVersion 24
    buildToolsVersion '25.0.0'

    defaultConfig {
        applicationId "com.willblaschko.android.avs"
        minSdkVersion 21

        targetSdkVersion 24
        versionCode 5
        versionName "2.1.1"
        multiDexEnabled true;
    }

    signingConfigs {
        releaseConfig {
            storeFile file("right_avs_key.jks")
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
        }
    }

    buildTypes {
        debug{
            versionNameSuffix " Debug"
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
        /*release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }*/
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    //noinspection GradleCompatible
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:recyclerview-v7:24.2.1'
    compile 'com.android.support:multidex:1.0.1'

    compile 'com.google.code.gson:gson:2.8.0'
    compile 'io.left.rightmesh:rightmesh-library-dev:0.4.1'

    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile project(path: ':libs:AlexaAndroid')
    compile project(path: ':libs:RecorderLevelView')
    compile project(path: ':libs:speechutils-master')

}

